# {{ ansible_managed }}

# ----------------------------
# pgPool-II configuration file
# ----------------------------
#
# This file consists of lines of the form:
#
#   name = value
#
# Whitespace may be used.  Comments are introduced with "#" anywhere on a line.
# The complete list of parameter names and allowed values can be found in the
# pgPool-II documentation.
#
# This file is read on server startup and when the server receives a SIGHUP
# signal.  If you edit the file on a running system, you have to SIGHUP the
# server for the changes to take effect, or use "pgpool reload".  Some
# parameters, which are marked below, require a server shutdown and restart to
# take effect.
#

#------------------------------------------------------------------------------
# BACKEND CLUSTERING MODE
# Choose one of: 'streaming_replication', 'native_replication',
#	'logical_replication', 'slony', 'raw' or 'snapshot_isolation'
# (change requires restart)
#------------------------------------------------------------------------------

backend_clustering_mode = '{{ pgpool2_backend_clustering_mode | default('streaming_replication') }}'

#------------------------------------------------------------------------------
# CONNECTIONS
#------------------------------------------------------------------------------

# - pgpool Connection Settings -

listen_addresses = '{{ pgpool2_listen_address | default('localhost') }}'
                                   # Host name or IP address to listen on:
                                   # '*' for all, '' for no TCP/IP connections
                                   # (change requires restart)
port = {{ pgpool2_port | default('9999') }}
                                   # Port number
                                   # (change requires restart)
socket_dir = '{{ pgpool2_socket_dir | default('/tmp') }}'
                                   # Unix domain socket path
                                   # The Debian package defaults to
                                   # /var/run/postgresql
                                   # (change requires restart)
reserved_connections = {{ pgpool2_reserved_connections | default('0') }}
                                   # Number of reserved connections.
                                   # Pgpool-II does not accept connections if over
                                   # num_init_chidlren - reserved_connections.


# - pgpool Communication Manager Connection Settings -

pcp_listen_addresses = '{{ pgpool2_pcp_listen_addresses | default('*') }}'
                                   # Host name or IP address for pcp process to listen on:
                                   # '*' for all, '' for no TCP/IP connections
                                   # (change requires restart)
pcp_port = {{ pgpool2_pcp_port | default('9898') }}
                                   # Port number for pcp
                                   # (change requires restart)
pcp_socket_dir = '{{ pgpool2_pcp_socket_dir | default('/tmp') }}'
                                   # Unix domain socket path for pcp
                                   # The Debian package defaults to
                                   # /var/run/postgresql
                                   # (change requires restart)
listen_backlog_multiplier = {{ pgpool2_listen_backlog_multiplier | default('2') }}
                                   # Set the backlog parameter of listen(2) to
                                   # num_init_children * listen_backlog_multiplier.
                                   # (change requires restart)
serialize_accept = {{ pgpool2_serialize_accept | default('off') }}
                                   # whether to serialize accept() call to avoid thundering herd problem
                                   # (change requires restart)

# - Backend Connection Settings -

{% for backend in pgpool2_backends %}
{% set id = loop.index0 %}
backend_hostname{{ id }} = '{{ backend.hostname }}'
backend_port{{ id }} = {{ backend.port | default('5432') }}
backend_weight{{ id }} = {{ backend.weight | default('1') }}
backend_data_directory{{ id }} = '{{ backend.data_directory | default('/var/lib/postgresql/' ~ pgpool2_postgresql_version ~ '/main') }}'
backend_flag{{ id }} = '{{ backend.flag | default('ALLOW_TO_FAILOVER') }}'
backend_application_name{{ id }} = '{{ backend.application_name | default(backend.hostname) }}'

{% endfor %}

# - Authentication -

enable_pool_hba = {{ pgpool2_enable_pool_hba | default('off') }}
                                   # Use pool_hba.conf for client authentication
pool_passwd = '{{ pgpool2_pool_passwd | default('pool_passwd') }}'
                                   # File name of pool_passwd for md5 authentication.
                                   # "" disables pool_passwd.
                                   # (change requires restart)
authentication_timeout = {{ pgpool2_authentication_timeout | default('1min') }}
                                   # Delay in seconds to complete client authentication
                                   # 0 means no timeout.

allow_clear_text_frontend_auth = {{ pgpool2_allow_clear_text_frontend_auth | default('off') }}
                                   # Allow Pgpool-II to use clear text password authentication
                                   # with clients, when pool_passwd does not
                                   # contain the user password

# - SSL Connections -

ssl = {{ pgpool2_ssl | default('off') }}
                                   # Enable SSL support
                                   # (change requires restart)
{% if pgpool2_ssl_key is defined %}
ssl_key = '{{ pgpool2_ssl_key }}'
{% else %}
#ssl_key = 'server.key'
{% endif %}
                                   # SSL private key file
                                   # (change requires restart)
{% if pgpool2_ssl_cert is defined %}
ssl_cert = '{{ pgpool2_ssl_cert }}'
{% else %}
#ssl_cert = 'server.crt'
{% endif %}
                                   # SSL public certificate file
                                   # (change requires restart)
{% if pgpool2_ssl_ca_cert is defined %}
ssl_ca_cert = '{{ pgpool2_ssl_ca_cert }}'
{% else %}
#ssl_ca_cert = ''
{% endif %}
                                   # Single PEM format file containing
                                   # CA root certificate(s)
                                   # (change requires restart)
{% if pgpool2_ssl_ca_cert_dir is defined %}
ssl_ca_cert_dir =  '{{ pgpool2_ssl_ca_cert_dir }}'
{% else %}
#ssl_ca_cert_dir =  ''
{% endif %}
                                   # Directory containing CA root certificate(s)
                                   # (change requires restart)
{% if pgpool2_ssl_crl_file is defined %}
ssl_crl_file = ''{{ pgpool2_ssl_crl_file }}
{% else %}
#ssl_crl_file = ''
{% endif %}
                                   # SSL certificate revocation list file
                                   # (change requires restart)

ssl_ciphers = '{{ pgpool2_ssl_ciphers | default('HIGH:MEDIUM:+3DES:!aNULL') }}'
                                   # Allowed SSL ciphers
                                   # (change requires restart)
ssl_prefer_server_ciphers = {{ pgpool2_ssl_prefer_server_ciphers | default('off') }}
                                   # Use server's SSL cipher preferences,
                                   # rather than the client's
                                   # (change requires restart)
ssl_ecdh_curve = '{{ pgpool2_ssl_ecdh_curve | default('prime256v1') }}'
                                   # Name of the curve to use in ECDH key exchange
{% if pgpool2_ssl_dh_params_file is defined %}
ssl_dh_params_file = '{{ pgpool2_ssl_dh_params_file | default('') }}'
{% else %}
#ssl_dh_params_file = ''
{% endif %}
                                   # Name of the file containing Diffie-Hellman parameters used
                                   # for so-called ephemeral DH family of SSL cipher.
{% if pgpool2_ssl_passphrase_command is defined %}
ssl_passphrase_command='{{ pgpool2_ssl_passphrase_command | default('') }}'
{% else %}
#ssl_passphrase_command=''
{% endif %}
                                   # Sets an external command to be invoked when a passphrase
                                   # for decrypting an SSL file needs to be obtained
                                   # (change requires restart)

#------------------------------------------------------------------------------
# POOLS
#------------------------------------------------------------------------------

# - Concurrent session and pool size -

num_init_children = {{ pgpool2_num_init_children | default('32') }}
                                   # Number of concurrent sessions allowed
                                   # (change requires restart)
max_pool = {{ pgpool2_max_pool | default('2') }}
                                   # Number of connection pool caches per connection
                                   # (change requires restart)

# - Life time -

child_life_time = {{ pgpool2_child_life_time | default('5min') }}
                                   # Pool exits after being idle for this many seconds
child_max_connections = {{ pgpool2_child_max_connections | default('0') }}
                                   # Pool exits after receiving that many connections
                                   # 0 means no exit
connection_life_time = {{ pgpool2_connection_life_time | default('0') }}
                                   # Connection to backend closes after being idle for this many seconds
                                   # 0 means no close
client_idle_limit = {{ pgpool2_client_idle_limit | default('0') }}
                                   # Client is disconnected after being idle for that many seconds
                                   # (even inside an explicit transactions!)
                                   # 0 means no disconnection


#------------------------------------------------------------------------------
# LOGS
#------------------------------------------------------------------------------

# - Where to log -

log_destination = '{{ pgpool2_log_destination | default('stderr') }}'
                                   # Where to log
                                   # Valid values are combinations of stderr,
                                   # and syslog. Default to stderr.

# - What to log -

log_line_prefix = '{{ pgpool2_log_line_prefix | default('%t: pid %p: ') }}'   # printf-style string to output at beginning of each log line.

log_connections = {{ pgpool2_log_connections | default('off') }}
                                   # Log connections
log_disconnections = {{ pgpool2_log_disconnections | default('off') }}
                                   # Log disconnections
log_hostname = {{ pgpool2_log_hostname | default('off') }}
                                   # Hostname will be shown in ps status
                                   # and in logs if connections are logged
log_statement = {{ pgpool2_log_statement | default('off') }}
                                   # Log all statements
log_per_node_statement = {{ pgpool2_log_per_node_statement | default('off') }}
                                   # Log all statements
                                   # with node and backend informations
log_client_messages = {{ pgpool2_log_client_messages | default('off') }}
                                   # Log any client messages
log_standby_delay = '{{ pgpool2_log_standby_delay | default('if_over_threshold') }}'
                                   # Log standby delay
                                   # Valid values are combinations of always,
                                   # if_over_threshold, none

# - Syslog specific -

syslog_facility = '{{ pgpool2_syslog_facility | default('LOCAL0') }}'
                                   # Syslog local facility. Default to LOCAL0
syslog_ident = '{{ pgpool2_syslog_ident | default('pgpool') }}'
                                   # Syslog program identification string
                                   # Default to 'pgpool'

# - Debug -

log_error_verbosity = {{ pgpool2_log_error_verbosity | default('default') }}
                                        # terse, default, or verbose messages

{% if pgpool2_client_min_messages is defined %}
client_min_messages = '{{ pgpool2_client_min_messages }}'
{% else %}
#client_min_messages = notice
{% endif %}
                                        # values in order of decreasing detail:
                                        #   debug5
                                        #   debug4
                                        #   debug3
                                        #   debug2
                                        #   debug1
                                        #   log
                                        #   notice
                                        #   warning
                                        #   error

{% if pgpool2_log_min_messages is defined %}
log_min_messages = '{{ pgpool2_log_min_messages }}'
{% else %}
#log_min_messages = warning
{% endif %}
                                        # values in order of decreasing detail:
                                        #   debug5
                                        #   debug4
                                        #   debug3
                                        #   debug2
                                        #   debug1
                                        #   info
                                        #   notice
                                        #   warning
                                        #   error
                                        #   log
                                        #   fatal
                                        #   panic

# This is used when logging to stderr:
{% if pgpool2_logging_collector is defined %}
logging_collector = '{{ pgpool2_logging_collector }}'
{% else %}
#logging_collector = off  
{% endif %}
                                        # Enable capturing of stderr
                                        # into log files.
                                        # (change requires restart)

# -- Only used if logging_collector is on ---

{% if pgpool2_log_directory is defined %}
log_directory = '{{ pgpool2_log_directory }}'
{% else %}
#log_directory = '/tmp/pgpool_log'
{% endif %}
                                        # directory where log files are written,
                                        # can be absolute
{% if pgpool2_log_filename is defined %}
log_filename = '{{ pgpool2_log_filename }}'
{% else %}
#log_filename = 'pgpool-%Y-%m-%d_%H%M%S.log'
{% endif %}
                                        # log file name pattern,
                                        # can include strftime() escapes

{% if pgpool2_log_file_mode is defined %}
log_file_mode = '{{ pgpool2_log_file_mode }}'
{% else %}
#log_file_mode = 0600
{% endif %}
                                        # creation mode for log files,
                                        # begin with 0 to use octal notation

{% if pgpool2_log_truncate_on_rotation is defined %}
log_truncate_on_rotation = '{{ pgpool2_log_truncate_on_rotation }}'
{% else %}
#log_truncate_on_rotation = off
{% endif %}
                                        # If on, an existing log file with the
                                        # same name as the new log file will be
                                        # truncated rather than appended to.
                                        # But such truncation only occurs on
                                        # time-driven rotation, not on restarts
                                        # or size-driven rotation.  Default is
                                        # off, meaning append to existing files
                                        # in all cases.

{% if pgpool2_log_rotation_age is defined %}
log_rotation_age = '{{ pgpool2_log_rotation_age }}'
{% else %}
#log_rotation_age = 1d
{% endif %}
                                        # Automatic rotation of logfiles will
                                        # happen after that (minutes)time.
                                        # 0 disables time based rotation.
{% if pgpool2_log_rotation_size is defined %}
log_rotation_size = '{{ pgpool2_log_rotation_size }}'
{% else %}
#log_rotation_size = 10MB
{% endif %}
                                        # Automatic rotation of logfiles will
                                        # happen after that much (KB) log output.
                                        # 0 disables size based rotation.
#------------------------------------------------------------------------------
# FILE LOCATIONS
#------------------------------------------------------------------------------

pid_file_name = '{{ pgpool2_pid_file_name | default('/var/run/pgpool/pgpool.pid') }}'
                                   # PID file name
                                   # Can be specified as relative to the"
                                   # location of pgpool.conf file or
                                   # as an absolute path
                                   # (change requires restart)
logdir = '{{ pgpool2_logdir | default('/tmp') }}'
                                   # Directory of pgPool status file
                                   # (change requires restart)

#------------------------------------------------------------------------------
# CONNECTION POOLING
#------------------------------------------------------------------------------

connection_cache = {{ pgpool2_connection_cache | default('on') }}
                                   # Activate connection pools
                                   # (change requires restart)

                                   # Semicolon separated list of queries
                                   # to be issued at the end of a session
                                   # The default is for 8.3 and later
reset_query_list = '{{ pgpool2_reset_query_list | default('ABORT; DISCARD ALL') }}'
                                   # The following one is for 8.2 and before
#reset_query_list = 'ABORT; RESET ALL; SET SESSION AUTHORIZATION DEFAULT'


#------------------------------------------------------------------------------
# REPLICATION MODE
#------------------------------------------------------------------------------

replicate_select = {{ pgpool2_replicate_select | default('off') }}
                                   # Replicate SELECT statements
                                   # when in replication mode
                                   # replicate_select is higher priority than
                                   # load_balance_mode.

insert_lock = {{ pgpool2_insert_lock | default('off') }}
                                   # Automatically locks a dummy row or a table
                                   # with INSERT statements to keep SERIAL data
                                   # consistency
                                   # Without SERIAL, no lock will be issued
lobj_lock_table = '{{ pgpool2_lobj_lock_table | default('') }}'
                                   # When rewriting lo_creat command in
                                   # replication mode, specify table name to
                                   # lock

# - Degenerate handling -

replication_stop_on_mismatch = {{ pgpool2_replication_stop_on_mismatch | default('off') }}
                                   # On disagreement with the packet kind
                                   # sent from backend, degenerate the node
                                   # which is most likely "minority"
                                   # If off, just force to exit this session

failover_if_affected_tuples_mismatch = {{ pgpool2_failover_if_affected_tuples_mismatch | default('off') }}
                                   # On disagreement with the number of affected
                                   # tuples in UPDATE/DELETE queries, then
                                   # degenerate the node which is most likely
                                   # "minority".
                                   # If off, just abort the transaction to
                                   # keep the consistency


#------------------------------------------------------------------------------
# LOAD BALANCING MODE
#------------------------------------------------------------------------------

load_balance_mode = {{ pgpool2_load_balance_mode | default('off') }}
                                   # Activate load balancing mode
                                   # (change requires restart)
ignore_leading_white_space = {{ pgpool2_ignore_leading_white_space | default('on') }}
                                   # Ignore leading white spaces of each query
read_only_function_list = '{{ pgpool2_read_only_function_list | default('') }}'
                                   # Comma separated list of function names
                                   # that don't write to database
                                   # Regexp are accepted
write_function_list = '{{ pgpool2_write_function_list | default('') }}'
                                   # Comma separated list of function names
                                   # that write to database
                                   # Regexp are accepted
				   # If both read_only_function_list and write_function_list
				   # is empty, function's volatile property is checked.
				   # If it's volatile, the function is regarded as a
				   # writing function.

primary_routing_query_pattern_list = '{{ pgpool2_primary_routing_query_pattern_list | default('') }}'
                                   # Semicolon separated list of query patterns
                                   # that should be sent to primary node
                                   # Regexp are accepted
                                   # valid for streaming replicaton mode only.

database_redirect_preference_list = '{{ pgpool2_database_redirect_preference_list | default('') }}'
                                   # comma separated list of pairs of database and node id.
                                   # example: postgres:primary,mydb[0-4]:1,mydb[5-9]:2'
                                   # valid for streaming replicaton mode only.

app_name_redirect_preference_list = '{{ pgpool2_app_name_redirect_preference_list | default('') }}'
                                   # comma separated list of pairs of app name and node id.
                                   # example: 'psql:primary,myapp[0-4]:1,myapp[5-9]:standby'
                                   # valid for streaming replicaton mode only.
allow_sql_comments = {{ pgpool2_allow_sql_comments | default('off') }}
                                   # if on, ignore SQL comments when judging if load balance or
                                   # query cache is possible.
                                   # If off, SQL comments effectively prevent the judgment
                                   # (pre 3.4 behavior).

disable_load_balance_on_write = '{{ pgpool2_disable_load_balance_on_write | default('transaction') }}'
                                   # Load balance behavior when write query is issued
                                   # in an explicit transaction.
                                   #
                                   # Valid values:
                                   #
                                   # 'transaction' (default):
                                   #     if a write query is issued, subsequent
                                   #     read queries will not be load balanced
                                   #     until the transaction ends.
                                   #
                                   # 'trans_transaction':
                                   #     if a write query is issued, subsequent
                                   #     read queries in an explicit transaction
                                   #     will not be load balanced until the session ends.
                                   #
                                   # 'dml_adaptive':
                                   #     Queries on the tables that have already been
                                   #     modified within the current explicit transaction will
                                   #     not be load balanced until the end of the transaction.
                                   #
                                   # 'always':
                                   #     if a write query is issued, read queries will
                                   #     not be load balanced until the session ends.
                                   #
                                   # Note that any query not in an explicit transaction
                                   # is not affected by the parameter.

dml_adaptive_object_relationship_list= '{{ pgpool2_dml_adaptive_object_relationship_list | default('') }}'
                                   # comma separated list of object pairs
                                   # [object]:[dependent-object], to disable load balancing
                                   # of dependent objects within the explicit transaction
                                   # after WRITE statement is issued on (depending-on) object.
                                   #
                                   # example: 'tb_t1:tb_t2,insert_tb_f_func():tb_f,tb_v:my_view'
                                   # Note: function name in this list must also be present in
                                   # the write_function_list
                                   # only valid for disable_load_balance_on_write = 'dml_adaptive'.

statement_level_load_balance = {{ pgpool2_statement_level_load_balance | default('off') }}
                                   # Enables statement level load balancing

#------------------------------------------------------------------------------
# NATIVE REPLICATION MODE
#------------------------------------------------------------------------------

# - Streaming -

sr_check_period = {{ pgpool2_sr_check_period | default('0') }}
                                   # Streaming replication check period
                                   # Disabled (0) by default
sr_check_user = '{{ pgpool2_sr_check_user | default('nobody') }}'
                                   # Streaming replication check user
                                   # This is neccessary even if you disable streaming
                                   # replication delay check by sr_check_period = 0
sr_check_password = '{{ pgpool2_sr_check_password | default('') }}'
                                   # Password for streaming replication check user
                                   # Leaving it empty will make Pgpool-II to first look for the
                                   # Password in pool_passwd file before using the empty password

sr_check_database = '{{ pgpool2_sr_check_database | default('postgres') }}'
                                   # Database name for streaming replication check

delay_threshold = {{ pgpool2_delay_threshold | default('0') }}
                                   # Threshold before not dispatching query to standby node
                                   # Unit is in bytes
                                   # Disabled (0) by default

# - Special commands -

follow_primary_command = '{{ pgpool2_follow_primary_command | default('') }}'
                                   # Executes this command after main node failover
                                   # Special values:
                                   #   %d = failed node id
                                   #   %h = failed node host name
                                   #   %p = failed node port number
                                   #   %D = failed node database cluster path
                                   #   %m = new main node id
                                   #   %H = new main node hostname
                                   #   %M = old main node id
                                   #   %P = old primary node id
                                   #   %r = new main port number
                                   #   %R = new main database cluster path
                                   #   %N = old primary node hostname
                                   #   %S = old primary node port number
                                   #   %% = '%' character

#------------------------------------------------------------------------------
# HEALTH CHECK GLOBAL PARAMETERS
#------------------------------------------------------------------------------

health_check_period = {{ pgpool2_health_check_period | default('0') }}
                                   # Health check period
                                   # Disabled (0) by default
health_check_timeout = {{ pgpool2_health_check_timeout | default('10') }}
                                   # Health check timeout
                                   # 0 means no timeout
health_check_user = '{{ pgpool2_health_check_user | default('nobody') }}'
                                   # Health check user
health_check_password = '{{ pgpool2_health_check_password | default('') }}'
                                   # Password for health check user
                                   # Leaving it empty will make Pgpool-II to first look for the
                                   # Password in pool_passwd file before using the empty password

health_check_database = '{{ pgpool2_health_check_database | default('') }}'
                                   # Database name for health check. If '', tries 'postgres' frist, 
health_check_max_retries = {{ pgpool2_health_check_max_retries | default('0') }}
                                   # Maximum number of times to retry a failed health check before giving up.
health_check_retry_delay = {{ pgpool2_health_check_retry_delay | default('1') }}
                                   # Amount of time to wait (in seconds) between retries.
connect_timeout = {{ pgpool2_connect_timeout | default('') }}
                                   # Timeout value in milliseconds before giving up to connect to backend.
                                   # Default is 10000 ms (10 second). Flaky network user may want to increase
                                   # the value. 0 means no timeout.
                                   # Note that this value is not only used for health check,
                                   # but also for ordinary conection to backend.

#------------------------------------------------------------------------------
# HEALTH CHECK PER NODE PARAMETERS (OPTIONAL)
#------------------------------------------------------------------------------
#health_check_period0 = 0
#health_check_timeout0 = 20
#health_check_user0 = 'nobody'
#health_check_password0 = ''
#health_check_database0 = ''
#health_check_max_retries0 = 0
#health_check_retry_delay0 = 1
#connect_timeout0 = 10000


#------------------------------------------------------------------------------
# FAILOVER AND FAILBACK
#------------------------------------------------------------------------------

failover_command = '{{ pgpool2_failover_command | default('') }}'
                                   # Executes this command at failover
                                   # Special values:
                                   #   %d = failed node id
                                   #   %h = failed node host name
                                   #   %p = failed node port number
                                   #   %D = failed node database cluster path
                                   #   %m = new main node id
                                   #   %H = new main node hostname
                                   #   %M = old main node id
                                   #   %P = old primary node id
                                   #   %r = new main port number
                                   #   %R = new main database cluster path
                                   #   %N = old primary node hostname
                                   #   %S = old primary node port number
                                   #   %% = '%' character

failback_command = '{{ pgpool2_failback_command | default('') }}'
                                   # Executes this command at failback.
                                   # Special values:
                                   #   %d = failed node id
                                   #   %h = failed node host name
                                   #   %p = failed node port number
                                   #   %D = failed node database cluster path
                                   #   %m = new main node id
                                   #   %H = new main node hostname
                                   #   %M = old main node id
                                   #   %P = old primary node id
                                   #   %r = new main port number
                                   #   %R = new main database cluster path
                                   #   %N = old primary node hostname
                                   #   %S = old primary node port number
                                   #   %% = '%' character

failover_on_backend_error = {{ pgpool2_failover_on_backend_error | default('on') }}
                                   # Initiates failover when reading/writing to the
                                   # backend communication socket fails
                                   # If set to off, pgpool will report an
                                   # error and disconnect the session.

detach_false_primary = {{ pgpool2_detach_false_primary | default('off') }}
                                   # Detach false primary if on. Only
                                   # valid in streaming replicaton
                                   # mode and with PostgreSQL 9.6 or
                                   # after.

search_primary_node_timeout = {{ pgpool2_search_primary_node_timeout | default('5min') }}
                                   # Timeout in seconds to search for the
                                   # primary node when a failover occurs.
                                   # 0 means no timeout, keep searching
                                   # for a primary node forever.

#------------------------------------------------------------------------------
# ONLINE RECOVERY
#------------------------------------------------------------------------------

recovery_user = '{{ pgpool2_recovery_user | default('nobody') }}'
                                   # Online recovery user
recovery_password = '{{ pgpool2_recovery_password | default('') }}'
                                   # Online recovery password
                                   # Leaving it empty will make Pgpool-II to first look for the
                                   # Password in pool_passwd file before using the empty password

recovery_1st_stage_command = '{{ pgpool2_recovery_1st_stage_command | default('') }}'
                                   # Executes a command in first stage
recovery_2nd_stage_command = '{{ pgpool2_recovery_2nd_stage_command | default('') }}'
                                   # Executes a command in second stage
recovery_timeout = {{ pgpool2_recovery_timeout | default('90') }}
                                   # Timeout in seconds to wait for the
                                   # recovering node's postmaster to start up
                                   # 0 means no wait
client_idle_limit_in_recovery = {{ pgpool2_client_idle_limit_in_recovery | default('0') }}
                                   # Client is disconnected after being idle
                                   # for that many seconds in the second stage
                                   # of online recovery
                                   # 0 means no disconnection
                                   # -1 means immediate disconnection

auto_failback = {{ pgpool2_auto_failback | default('off') }}
                                   # Dettached backend node reattach automatically
                                   # if replication_state is 'streaming'.
auto_failback_interval = {{ pgpool2_auto_failback_interval | default('1min') }}
                                   # Min interval of executing auto_failback in
                                   # seconds.

#------------------------------------------------------------------------------
# WATCHDOG
#------------------------------------------------------------------------------

# - Enabling -

use_watchdog = {{ pgpool2_use_watchdog | default('off') }}
                                    # Activates watchdog
                                    # (change requires restart)

# -Connection to up stream servers -

trusted_servers = '{{ pgpool2_trusted_servers | default('') }}'
                                    # trusted server list which are used
                                    # to confirm network connection
                                    # (hostA,hostB,hostC,...)
                                    # (change requires restart)
ping_path = '{{ pgpool2_ping_path | default('/usr/bin') }}'
                                    # ping command path
                                    # (change requires restart)

# - Watchdog communication Settings -

#hostname0 = 'pgpool1'
                                    # Host name or IP address of pgpool node
                                    # for watchdog connection
                                    # (change requires restart)
#wd_port0 = 9000
                                    # Port number for watchdog service
                                    # (change requires restart)
#pgpool_port0 = 5432
                                    # Port number for pgpool
                                    # (change requires restart)

{% for node in pgpool2_node_list %}
{% set id = loop.index0 %}
hostname{{ id }} = '{{ node.hostname }}'
wd_port{{ id }} = {{ node.wd_port | default('9000') }}
pgpool_port{{ id }} = {{ node.pgpool_port | default('9999') }}

{% endfor %}

wd_priority = {{ pgpool2_wd_priority | default('1') }}
                                    # priority of this watchdog in leader election
                                    # (change requires restart)

wd_authkey = '{{ pgpool2_wd_authkey | default('') }}'
                                    # Authentication key for watchdog communication
                                    # (change requires restart)

wd_ipc_socket_dir = '{{ pgpool2_wd_ipc_socket_dir | default('/var/run/postgresql') }}'
                                    # Unix domain socket path for watchdog IPC socket
                                    # The Debian package defaults to
                                    # /var/run/postgresql
                                    # (change requires restart)


# - Virtual IP control Setting -

delegate_IP = '{{ pgpool2_delegate_ip | default('') }}'
                                    # delegate IP address
                                    # If this is empty, virtual IP never bring up.
                                    # (change requires restart)
if_cmd_path = '{{ pgpool2_if_cmd_path | default('/sbin') }}'
                                    # path to the directory where if_up/down_cmd exists
                                    # If if_up/down_cmd starts with "/", if_cmd_path will be ignored.
                                    # (change requires restart)
if_up_cmd = '{{ pgpool2_if_up_cmd }}'
                                    # startup delegate IP command
                                    # (change requires restart)
if_down_cmd = '{{ pgpool2_if_down_cmd }}'
                                    # shutdown delegate IP command
                                    # (change requires restart)
arping_path = '{{ pgpool2_arping_path | default('/usr/sbin') }}'
                                    # arping command path
                                    # If arping_cmd starts with "/", if_cmd_path will be ignored.
                                    # (change requires restart)
arping_cmd = '{{ pgpool2_arping_cmd }}'
                                    # arping command
                                    # (change requires restart)

# - Behaivor on escalation Setting -

clear_memqcache_on_escalation = {{ pgpool2_clear_memqcache_on_escalation | default('on') }}
                                    # Clear all the query cache on shared memory
                                    # when standby pgpool escalate to active pgpool
                                    # (= virtual IP holder).
                                    # This should be off if client connects to pgpool
                                    # not using virtual IP.
                                    # (change requires restart)
wd_escalation_command = '{{ pgpool2_wd_escalation_command | default('') }}'
                                    # Executes this command at escalation on new active pgpool.
                                    # (change requires restart)
wd_de_escalation_command = '{{ pgpool2_wd_de_escalation_command | default('') }}'
                                    # Executes this command when leader pgpool resigns from being leader.
                                    # (change requires restart)

# - Watchdog consensus settings for failover -

failover_when_quorum_exists = {{ pgpool2_failover_when_quorum_exists | default('on') }}
                                    # Only perform backend node failover
                                    # when the watchdog cluster holds the quorum
                                    # (change requires restart)

failover_require_consensus = {{ pgpool2_failover_require_consensus | default('on') }}
                                    # Perform failover when majority of Pgpool-II nodes
                                    # aggrees on the backend node status change
                                    # (change requires restart)

allow_multiple_failover_requests_from_node = {{ pgpool2_allow_multiple_failover_requests_from_node | default('off') }}
                                    # A Pgpool-II node can cast multiple votes
                                    # for building the consensus on failover
                                    # (change requires restart)


enable_consensus_with_half_votes = {{ pgpool2_enable_consensus_with_half_votes | default('off') }}
                                    # apply majority rule for consensus and quorum computation
                                    # at 50% of votes in a cluster with even number of nodes.
                                    # when enabled the existence of quorum and consensus
                                    # on failover is resolved after receiving half of the
                                    # total votes in the cluster, otherwise both these
                                    # decisions require at least one more vote than
                                    # half of the total votes.
                                    # (change requires restart)

# - Lifecheck Setting -

# -- common --

wd_monitoring_interfaces_list = '{{ pgpool2_wd_monitoring_interfaces_list | default('') }}'
                                    # Comma separated list of interfaces names to monitor.
                                    # if any interface from the list is active the watchdog will
                                    # consider the network is fine
                                    # 'any' to enable monitoring on all interfaces except loopback
                                    # '' to disable monitoring
                                    # (change requires restart)

wd_lifecheck_method = '{{ pgpool2_wd_lifecheck_method | default('heartbeat') }}'
                                    # Method of watchdog lifecheck ('heartbeat' or 'query' or 'external')
                                    # (change requires restart)
wd_interval = {{ pgpool2_wd_interval | default('10') }}
                                    # lifecheck interval (sec) > 0
                                    # (change requires restart)

# -- heartbeat mode --

#heartbeat_hostname0 = ''
                                    # Host name or IP address used
                                    # for sending heartbeat signal.
                                    # (change requires restart)
#heartbeat_port0 = 9694
                                    # Port number used for receiving/sending heartbeat signal
                                    # Usually this is the same as heartbeat_portX.
                                    # (change requires restart)
#heartbeat_device0 = ''
                                    # Name of NIC device (such like 'eth0')
                                    # used for sending/receiving heartbeat
                                    # signal to/from destination 0.
                                    # This works only when this is not empty
                                    # and pgpool has root privilege.
                                    # (change requires restart)

{% for node in pgpool2_node_list %}
{% set id = loop.index0 %}
heartbeat_hostname{{ id }} = '{{ node.hostname }}'
heartbeat_port{{ id }} = {{ node.heartbeat_port | default('9694') }}
heartbeat_device{{ id }} = {{ node.heartbeat_device | default('') }}

{% endfor %}

wd_heartbeat_keepalive = {{ pgpool2_wd_heartbeat_keepalive | default('2') }}
                                    # Interval time of sending heartbeat signal (sec)
                                    # (change requires restart)
wd_heartbeat_deadtime = {{ pgpool2_wd_heartbeat_deadtime | default('30') }}
                                    # Deadtime interval for heartbeat signal (sec)
                                    # (change requires restart)

# -- query mode --

wd_life_point = {{ pgpool2_wd_life_point | default('3') }}
                                    # lifecheck retry times
                                    # (change requires restart)
wd_lifecheck_query = '{{ pgpool2_wd_lifecheck_query | default('SELECT 1') }}'
                                    # lifecheck query to pgpool from watchdog
                                    # (change requires restart)
wd_lifecheck_dbname = '{{ pgpool2_wd_lifecheck_dbname | default('template1') }}'
                                    # Database name connected for lifecheck
                                    # (change requires restart)
wd_lifecheck_user = '{{ pgpool2_wd_lifecheck_user | default('nobody') }}'
                                    # watchdog user monitoring pgpools in lifecheck
                                    # (change requires restart)
wd_lifecheck_password = '{{ pgpool2_wd_lifecheck_password | default('') }}'
                                    # Password for watchdog user in lifecheck
                                    # Leaving it empty will make Pgpool-II to first look for the
                                    # Password in pool_passwd file before using the empty password
                                    # (change requires restart)

#------------------------------------------------------------------------------
# OTHERS
#------------------------------------------------------------------------------
relcache_expire = {{ pgpool2_relcache_expire | default('0') }}
                                   # Life time of relation cache in seconds.
                                   # 0 means no cache expiration(the default).
                                   # The relation cache is used for cache the
                                   # query result against PostgreSQL system
                                   # catalog to obtain various information
                                   # including table structures or if it's a
                                   # temporary table or not. The cache is
                                   # maintained in a pgpool child local memory
                                   # and being kept as long as it survives.
                                   # If someone modify the table by using
                                   # ALTER TABLE or some such, the relcache is
                                   # not consistent anymore.
                                   # For this purpose, cache_expiration
                                   # controls the life time of the cache.
relcache_size = {{ pgpool2_relcache_size | default('256') }}
                                   # Number of relation cache
                                   # entry. If you see frequently:
                                   # "pool_search_relcache: cache replacement happend"
                                   # in the pgpool log, you might want to increate this number.

check_temp_table = {{ pgpool2_check_temp_table | default('catalog') }}
                                   # Temporary table check method. catalog, trace or none.
                                   # Default is catalog.

check_unlogged_table = {{ pgpool2_check_unlogged_table | default('on') }}
                                   # If on, enable unlogged table check in SELECT statements.
                                   # This initiates queries against system catalog of primary/main
                                   # thus increases load of primary.
                                   # If you are absolutely sure that your system never uses unlogged tables
                                   # and you want to save access to primary/main, you could turn this off.
                                   # Default is on.
enable_shared_relcache = {{ pgpool2_enable_shared_relcache | default('on') }}
                                   # If on, relation cache stored in memory cache,
                                   # the cache is shared among child process.
                                   # Default is on.
                                   # (change requires restart)

relcache_query_target = {{ pgpool2_relcache_query_target | default('primary') }}
                                   # Target node to send relcache queries. Default is primary node.
                                   # If load_balance_node is specified, queries will be sent to load balance node.

#------------------------------------------------------------------------------
# IN MEMORY QUERY MEMORY CACHE
#------------------------------------------------------------------------------
memory_cache_enabled = {{ pgpool2_memory_cache_enabled | default('off') }}
                                   # If on, use the memory cache functionality, off by default
                                   # (change requires restart)
memqcache_method = '{{ pgpool2_memqcache_method | default('shmem') }}'
                                   # Cache storage method. either 'shmem'(shared memory) or
                                   # 'memcached'. 'shmem' by default
                                   # (change requires restart)
memqcache_memcached_host = '{{ pgpool2_memqcache_memcached_host | default('localhost') }}'
                                   # Memcached host name or IP address. Mandatory if
                                   # memqcache_method = 'memcached'.
                                   # Defaults to localhost.
                                   # (change requires restart)
memqcache_memcached_port = {{ pgpool2_memqcache_memcached_port | default('11211') }}
                                   # Memcached port number. Mondatory if memqcache_method = 'memcached'.
                                   # Defaults to 11211.
                                   # (change requires restart)
memqcache_total_size = {{ pgpool2_memqcache_total_size | default('64MB') }}
                                   # Total memory size in bytes for storing memory cache.
                                   # Mandatory if memqcache_method = 'shmem'.
                                   # Defaults to 64MB.
                                   # (change requires restart)
memqcache_max_num_cache = {{ pgpool2_memqcache_max_num_cache | default('1000000') }}
                                   # Total number of cache entries. Mandatory
                                   # if memqcache_method = 'shmem'.
                                   # Each cache entry consumes 48 bytes on shared memory.
                                   # Defaults to 1,000,000(45.8MB).
                                   # (change requires restart)
memqcache_expire = {{ pgpool2_memqcache_expire | default('0') }}
                                   # Memory cache entry life time specified in seconds.
                                   # 0 means infinite life time. 0 by default.
                                   # (change requires restart)
memqcache_auto_cache_invalidation = {{ pgpool2_memqcache_auto_cache_invalidation | default('on') }}
                                   # If on, invalidation of query cache is triggered by corresponding
                                   # DDL/DML/DCL(and memqcache_expire).  If off, it is only triggered
                                   # by memqcache_expire.  on by default.
                                   # (change requires restart)
memqcache_maxcache = {{ pgpool2_memqcache_maxcache | default('400kB') }}
                                   # Maximum SELECT result size in bytes.
                                   # Must be smaller than memqcache_cache_block_size. Defaults to 400KB.
                                   # (change requires restart)
memqcache_cache_block_size = {{ pgpool2_memqcache_cache_block_size | default('1MB') }}
                                   # Cache block size in bytes. Mandatory if memqcache_method = 'shmem'.
                                   # Defaults to 1MB.
                                   # (change requires restart)
memqcache_oiddir = '{{ pgpool2_memqcache_oiddir | default('/var/log/pgpool/oiddir') }}
                                   # Temporary work directory to record table oids
                                   # (change requires restart)
cache_safe_memqcache_table_list = '{{ pgpool2_cache_safe_memqcache_table_list | default('') }}'
                                   # Comma separated list of table names to memcache
                                   # that don't write to database
                                   # Regexp are accepted
cache_unsafe_memqcache_table_list = '{{ pgpool2_cache_unsafe_memqcache_table_list | default('') }}'
                                   # Comma separated list of table names not to memcache
                                   # that don't write to database
                                   # Regexp are accepted
